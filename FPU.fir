circuit FPU :
  module RecFNToRecFN :
    output io : { flip in : UInt<32>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<32>, exceptionFlags : UInt<5>}

    node rawIn_exp = bits(io.in, 30, 22) @[rawFloatFromRecFN.scala 51:21]
    node _rawIn_isZero_T = bits(rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 52:28]
    node rawIn_isZero = eq(_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 52:53]
    node _rawIn_isSpecial_T = bits(rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 53:28]
    node rawIn_isSpecial = eq(_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 53:53]
    wire rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>} @[rawFloatFromRecFN.scala 55:23]
    node _rawIn_out_isNaN_T = bits(rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _rawIn_out_isNaN_T_1 = and(rawIn_isSpecial, _rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 56:33]
    rawIn.isNaN <= _rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 56:20]
    node _rawIn_out_isInf_T = bits(rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 57:41]
    node _rawIn_out_isInf_T_1 = eq(_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 57:36]
    node _rawIn_out_isInf_T_2 = and(rawIn_isSpecial, _rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 57:33]
    rawIn.isInf <= _rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 57:20]
    rawIn.isZero <= rawIn_isZero @[rawFloatFromRecFN.scala 58:20]
    node _rawIn_out_sign_T = bits(io.in, 31, 31) @[rawFloatFromRecFN.scala 59:25]
    rawIn.sign <= _rawIn_out_sign_T @[rawFloatFromRecFN.scala 59:20]
    node _rawIn_out_sExp_T = cvt(rawIn_exp) @[rawFloatFromRecFN.scala 60:27]
    rawIn.sExp <= _rawIn_out_sExp_T @[rawFloatFromRecFN.scala 60:20]
    node _rawIn_out_sig_T = eq(rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 61:35]
    node _rawIn_out_sig_T_1 = cat(UInt<1>("h0"), _rawIn_out_sig_T) @[rawFloatFromRecFN.scala 61:32]
    node _rawIn_out_sig_T_2 = bits(io.in, 21, 0) @[rawFloatFromRecFN.scala 61:49]
    node _rawIn_out_sig_T_3 = cat(_rawIn_out_sig_T_1, _rawIn_out_sig_T_2) @[rawFloatFromRecFN.scala 61:44]
    rawIn.sig <= _rawIn_out_sig_T_3 @[rawFloatFromRecFN.scala 61:20]
    node _io_out_T = shl(io.in, 0) @[RecFNToRecFN.scala 64:35]
    io.out <= _io_out_T @[RecFNToRecFN.scala 64:27]
    node _io_exceptionFlags_T = bits(rawIn.sig, 21, 21) @[common.scala 82:56]
    node _io_exceptionFlags_T_1 = eq(_io_exceptionFlags_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_exceptionFlags_T_2 = and(rawIn.isNaN, _io_exceptionFlags_T_1) @[common.scala 82:46]
    node _io_exceptionFlags_T_3 = cat(_io_exceptionFlags_T_2, UInt<4>("h0")) @[RecFNToRecFN.scala 65:54]
    io.exceptionFlags <= _io_exceptionFlags_T_3 @[RecFNToRecFN.scala 65:27]

  module MulFullRawFN :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<46>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<10>("h100"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 45, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 21, 21) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 21, 21) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<26>}}

    inst mulFullRaw of MulFullRawFN @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 21) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 20, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_ie8_is25_oe8_os23 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<26>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<32>, exceptionFlags : UInt<5>}

    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 94:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 95:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 98:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 98:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 98:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 98:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 114:22]
    node doShiftSigDown1 = bits(adjustedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 120:57]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 122:31]
    wire common_fractOut : UInt<22> @[RoundAnyRawFNToRecFN.scala 123:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 126:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 127:37]
    node _roundMask_T = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 156:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 52:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 58:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 59:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 58:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 59:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 58:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 59:26]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_2) @[primitives.scala 76:56]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 43) @[primitives.scala 78:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<16>("hffff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 11, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 4) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 13, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_25, 14, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_34 = shl(_roundMask_T_33, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_35 = xor(_roundMask_T_25, _roundMask_T_34) @[Bitwise.scala 107:21]
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_37 = and(_roundMask_T_36, _roundMask_T_35) @[Bitwise.scala 108:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_40 = not(_roundMask_T_35) @[Bitwise.scala 108:82]
    node _roundMask_T_41 = and(_roundMask_T_39, _roundMask_T_40) @[Bitwise.scala 108:80]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 108:39]
    node _roundMask_T_43 = bits(_roundMask_T_2, 20, 16) @[Bitwise.scala 114:47]
    node _roundMask_T_44 = bits(_roundMask_T_43, 3, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_45 = bits(_roundMask_T_44, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_46 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_47 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_48 = cat(_roundMask_T_46, _roundMask_T_47) @[Cat.scala 33:92]
    node _roundMask_T_49 = bits(_roundMask_T_44, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_50 = bits(_roundMask_T_49, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_51 = bits(_roundMask_T_49, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_52 = cat(_roundMask_T_50, _roundMask_T_51) @[Cat.scala 33:92]
    node _roundMask_T_53 = cat(_roundMask_T_48, _roundMask_T_52) @[Cat.scala 33:92]
    node _roundMask_T_54 = bits(_roundMask_T_43, 4, 4) @[Bitwise.scala 114:47]
    node _roundMask_T_55 = cat(_roundMask_T_53, _roundMask_T_54) @[Cat.scala 33:92]
    node _roundMask_T_56 = cat(_roundMask_T_42, _roundMask_T_55) @[Cat.scala 33:92]
    node _roundMask_T_57 = not(_roundMask_T_56) @[primitives.scala 73:32]
    node _roundMask_T_58 = mux(roundMask_msb_2, UInt<1>("h0"), _roundMask_T_57) @[primitives.scala 73:21]
    node _roundMask_T_59 = not(_roundMask_T_58) @[primitives.scala 73:17]
    node _roundMask_T_60 = cat(_roundMask_T_59, UInt<3>("h7")) @[primitives.scala 68:58]
    node roundMask_msb_3 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 58:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 59:26]
    node roundMask_shift_1 = dshr(asSInt(UInt<65>("h10000000000000000")), roundMask_lsbs_3) @[primitives.scala 76:56]
    node _roundMask_T_61 = bits(roundMask_shift_1, 2, 0) @[primitives.scala 78:22]
    node _roundMask_T_62 = bits(_roundMask_T_61, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_63 = bits(_roundMask_T_62, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_64 = bits(_roundMask_T_62, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_65 = cat(_roundMask_T_63, _roundMask_T_64) @[Cat.scala 33:92]
    node _roundMask_T_66 = bits(_roundMask_T_61, 2, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_67 = cat(_roundMask_T_65, _roundMask_T_66) @[Cat.scala 33:92]
    node _roundMask_T_68 = mux(roundMask_msb_3, _roundMask_T_67, UInt<1>("h0")) @[primitives.scala 62:24]
    node _roundMask_T_69 = mux(roundMask_msb_1, _roundMask_T_60, _roundMask_T_68) @[primitives.scala 67:24]
    node _roundMask_T_70 = mux(roundMask_msb, _roundMask_T_69, UInt<1>("h0")) @[primitives.scala 62:24]
    node _roundMask_T_71 = or(_roundMask_T_70, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 159:23]
    node roundMask = cat(_roundMask_T_71, UInt<2>("h3")) @[RoundAnyRawFNToRecFN.scala 159:42]
    node _shiftedRoundMask_T = cat(UInt<1>("h0"), roundMask) @[RoundAnyRawFNToRecFN.scala 162:41]
    node shiftedRoundMask = shr(_shiftedRoundMask_T, 1) @[RoundAnyRawFNToRecFN.scala 162:53]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 163:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 164:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 164:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 165:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 165:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 166:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 169:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 169:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 171:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 170:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 174:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 174:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 174:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 175:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 176:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 175:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 177:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<25>("h0")) @[RoundAnyRawFNToRecFN.scala 175:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 175:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 174:57]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 180:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 180:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 180:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 181:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 181:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 181:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 180:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 173:16]
    node _sRoundedExp_T = shr(roundedSig, 23) @[RoundAnyRawFNToRecFN.scala 185:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 185:76]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 185:40]
    node _common_expOut_T = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 187:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 187:23]
    node _common_fractOut_T = bits(roundedSig, 22, 1) @[RoundAnyRawFNToRecFN.scala 190:27]
    node _common_fractOut_T_1 = bits(roundedSig, 21, 0) @[RoundAnyRawFNToRecFN.scala 191:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 189:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 188:25]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 196:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 196:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 193:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<8>("h6c"))) @[RoundAnyRawFNToRecFN.scala 200:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 197:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 203:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 203:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 205:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 205:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 205:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 205:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 205:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 207:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 207:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 209:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 208:46]
    node _roundCarry_T = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 212:27]
    node _roundCarry_T_1 = bits(roundedSig, 23, 23) @[RoundAnyRawFNToRecFN.scala 213:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 211:16]
    node _common_underflow_T = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 220:64]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 220:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 221:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 221:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 221:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 220:72]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 224:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 225:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 223:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 223:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 222:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 226:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 227:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 227:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 222:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 221:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 217:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 215:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 230:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 230:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 235:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 236:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 237:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 237:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 237:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 237:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 237:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 238:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 239:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 240:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 240:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 243:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 243:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 245:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 245:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 245:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 246:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 246:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 248:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 248:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 250:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 253:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 253:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 253:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 252:24]
    node _expOut_T_4 = not(UInt<9>("h6c")) @[RoundAnyRawFNToRecFN.scala 258:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 257:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 257:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 256:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 261:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 261:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 260:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 265:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 265:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 264:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6c"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 269:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 268:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 273:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 272:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 277:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 276:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 278:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 277:73]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 280:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 280:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<22>("h200000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 281:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 280:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<22>("h3fffff"), UInt<22>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 283:11]
    node _io_out_T = cat(signOut, expOut) @[RoundAnyRawFNToRecFN.scala 286:23]
    node _io_out_T_1 = cat(_io_out_T, fractOut) @[RoundAnyRawFNToRecFN.scala 286:33]
    io.out <= _io_out_T_1 @[RoundAnyRawFNToRecFN.scala 286:12]
    node _io_exceptionFlags_T = cat(io.invalidExc, io.infiniteExc) @[RoundAnyRawFNToRecFN.scala 288:23]
    node _io_exceptionFlags_T_1 = cat(_io_exceptionFlags_T, overflow) @[RoundAnyRawFNToRecFN.scala 288:41]
    node _io_exceptionFlags_T_2 = cat(_io_exceptionFlags_T_1, underflow) @[RoundAnyRawFNToRecFN.scala 288:53]
    node _io_exceptionFlags_T_3 = cat(_io_exceptionFlags_T_2, inexact) @[RoundAnyRawFNToRecFN.scala 288:66]
    io.exceptionFlags <= _io_exceptionFlags_T_3 @[RoundAnyRawFNToRecFN.scala 287:23]

  module RoundRawFNToRecFN_e8_s23 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<26>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<32>, exceptionFlags : UInt<5>}

    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_ie8_is25_oe8_os23 @[RoundAnyRawFNToRecFN.scala 310:15]
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 314:44]
    roundAnyRawFNToRecFN.io.in.sig <= io.in.sig @[RoundAnyRawFNToRecFN.scala 315:44]
    roundAnyRawFNToRecFN.io.in.sExp <= io.in.sExp @[RoundAnyRawFNToRecFN.scala 315:44]
    roundAnyRawFNToRecFN.io.in.sign <= io.in.sign @[RoundAnyRawFNToRecFN.scala 315:44]
    roundAnyRawFNToRecFN.io.in.isZero <= io.in.isZero @[RoundAnyRawFNToRecFN.scala 315:44]
    roundAnyRawFNToRecFN.io.in.isInf <= io.in.isInf @[RoundAnyRawFNToRecFN.scala 315:44]
    roundAnyRawFNToRecFN.io.in.isNaN <= io.in.isNaN @[RoundAnyRawFNToRecFN.scala 315:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 316:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 317:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 318:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 319:23]

  module MulRecFN :
    output io : { flip a : UInt<32>, flip b : UInt<32>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<32>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 30, 22) @[rawFloatFromRecFN.scala 51:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 52:28]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 52:53]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 53:28]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 53:53]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>} @[rawFloatFromRecFN.scala 55:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 56:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 57:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 57:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 57:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 57:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 31, 31) @[rawFloatFromRecFN.scala 59:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 60:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 60:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 61:35]
    node _mulRawFN_io_a_out_sig_T_1 = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[rawFloatFromRecFN.scala 61:32]
    node _mulRawFN_io_a_out_sig_T_2 = bits(io.a, 21, 0) @[rawFloatFromRecFN.scala 61:49]
    node _mulRawFN_io_a_out_sig_T_3 = cat(_mulRawFN_io_a_out_sig_T_1, _mulRawFN_io_a_out_sig_T_2) @[rawFloatFromRecFN.scala 61:44]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_3 @[rawFloatFromRecFN.scala 61:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 30, 22) @[rawFloatFromRecFN.scala 51:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 52:28]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 52:53]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 53:28]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 53:53]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>} @[rawFloatFromRecFN.scala 55:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 56:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 57:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 57:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 57:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 57:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 31, 31) @[rawFloatFromRecFN.scala 59:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 60:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 60:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 61:35]
    node _mulRawFN_io_b_out_sig_T_1 = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[rawFloatFromRecFN.scala 61:32]
    node _mulRawFN_io_b_out_sig_T_2 = bits(io.b, 21, 0) @[rawFloatFromRecFN.scala 61:49]
    node _mulRawFN_io_b_out_sig_T_3 = cat(_mulRawFN_io_b_out_sig_T_1, _mulRawFN_io_b_out_sig_T_2) @[rawFloatFromRecFN.scala 61:44]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_3 @[rawFloatFromRecFN.scala 61:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_e8_s23 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FPU :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip a : { bits : UInt<31>}, flip b : { bits : UInt<31>}, out : { bits : UInt<31>}}

    node floatMul_t_rec_rawIn_sign = bits(io.b.bits, 30, 30) @[rawFloatFromFN.scala 44:18]
    node floatMul_t_rec_rawIn_expIn = bits(io.b.bits, 29, 22) @[rawFloatFromFN.scala 45:19]
    node floatMul_t_rec_rawIn_fractIn = bits(io.b.bits, 21, 0) @[rawFloatFromFN.scala 46:21]
    node floatMul_t_rec_rawIn_isZeroExpIn = eq(floatMul_t_rec_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 48:30]
    node floatMul_t_rec_rawIn_isZeroFractIn = eq(floatMul_t_rec_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 49:34]
    node _floatMul_t_rec_rawIn_normDist_T = bits(floatMul_t_rec_rawIn_fractIn, 0, 0) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_1 = bits(floatMul_t_rec_rawIn_fractIn, 1, 1) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_2 = bits(floatMul_t_rec_rawIn_fractIn, 2, 2) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_3 = bits(floatMul_t_rec_rawIn_fractIn, 3, 3) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_4 = bits(floatMul_t_rec_rawIn_fractIn, 4, 4) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_5 = bits(floatMul_t_rec_rawIn_fractIn, 5, 5) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_6 = bits(floatMul_t_rec_rawIn_fractIn, 6, 6) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_7 = bits(floatMul_t_rec_rawIn_fractIn, 7, 7) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_8 = bits(floatMul_t_rec_rawIn_fractIn, 8, 8) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_9 = bits(floatMul_t_rec_rawIn_fractIn, 9, 9) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_10 = bits(floatMul_t_rec_rawIn_fractIn, 10, 10) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_11 = bits(floatMul_t_rec_rawIn_fractIn, 11, 11) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_12 = bits(floatMul_t_rec_rawIn_fractIn, 12, 12) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_13 = bits(floatMul_t_rec_rawIn_fractIn, 13, 13) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_14 = bits(floatMul_t_rec_rawIn_fractIn, 14, 14) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_15 = bits(floatMul_t_rec_rawIn_fractIn, 15, 15) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_16 = bits(floatMul_t_rec_rawIn_fractIn, 16, 16) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_17 = bits(floatMul_t_rec_rawIn_fractIn, 17, 17) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_18 = bits(floatMul_t_rec_rawIn_fractIn, 18, 18) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_19 = bits(floatMul_t_rec_rawIn_fractIn, 19, 19) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_20 = bits(floatMul_t_rec_rawIn_fractIn, 20, 20) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_21 = bits(floatMul_t_rec_rawIn_fractIn, 21, 21) @[primitives.scala 91:52]
    node _floatMul_t_rec_rawIn_normDist_T_22 = mux(_floatMul_t_rec_rawIn_normDist_T_1, UInt<5>("h14"), UInt<5>("h15")) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_23 = mux(_floatMul_t_rec_rawIn_normDist_T_2, UInt<5>("h13"), _floatMul_t_rec_rawIn_normDist_T_22) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_24 = mux(_floatMul_t_rec_rawIn_normDist_T_3, UInt<5>("h12"), _floatMul_t_rec_rawIn_normDist_T_23) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_25 = mux(_floatMul_t_rec_rawIn_normDist_T_4, UInt<5>("h11"), _floatMul_t_rec_rawIn_normDist_T_24) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_26 = mux(_floatMul_t_rec_rawIn_normDist_T_5, UInt<5>("h10"), _floatMul_t_rec_rawIn_normDist_T_25) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_27 = mux(_floatMul_t_rec_rawIn_normDist_T_6, UInt<4>("hf"), _floatMul_t_rec_rawIn_normDist_T_26) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_28 = mux(_floatMul_t_rec_rawIn_normDist_T_7, UInt<4>("he"), _floatMul_t_rec_rawIn_normDist_T_27) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_29 = mux(_floatMul_t_rec_rawIn_normDist_T_8, UInt<4>("hd"), _floatMul_t_rec_rawIn_normDist_T_28) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_30 = mux(_floatMul_t_rec_rawIn_normDist_T_9, UInt<4>("hc"), _floatMul_t_rec_rawIn_normDist_T_29) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_31 = mux(_floatMul_t_rec_rawIn_normDist_T_10, UInt<4>("hb"), _floatMul_t_rec_rawIn_normDist_T_30) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_32 = mux(_floatMul_t_rec_rawIn_normDist_T_11, UInt<4>("ha"), _floatMul_t_rec_rawIn_normDist_T_31) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_33 = mux(_floatMul_t_rec_rawIn_normDist_T_12, UInt<4>("h9"), _floatMul_t_rec_rawIn_normDist_T_32) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_34 = mux(_floatMul_t_rec_rawIn_normDist_T_13, UInt<4>("h8"), _floatMul_t_rec_rawIn_normDist_T_33) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_35 = mux(_floatMul_t_rec_rawIn_normDist_T_14, UInt<3>("h7"), _floatMul_t_rec_rawIn_normDist_T_34) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_36 = mux(_floatMul_t_rec_rawIn_normDist_T_15, UInt<3>("h6"), _floatMul_t_rec_rawIn_normDist_T_35) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_37 = mux(_floatMul_t_rec_rawIn_normDist_T_16, UInt<3>("h5"), _floatMul_t_rec_rawIn_normDist_T_36) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_38 = mux(_floatMul_t_rec_rawIn_normDist_T_17, UInt<3>("h4"), _floatMul_t_rec_rawIn_normDist_T_37) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_39 = mux(_floatMul_t_rec_rawIn_normDist_T_18, UInt<2>("h3"), _floatMul_t_rec_rawIn_normDist_T_38) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_40 = mux(_floatMul_t_rec_rawIn_normDist_T_19, UInt<2>("h2"), _floatMul_t_rec_rawIn_normDist_T_39) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_normDist_T_41 = mux(_floatMul_t_rec_rawIn_normDist_T_20, UInt<1>("h1"), _floatMul_t_rec_rawIn_normDist_T_40) @[Mux.scala 47:70]
    node floatMul_t_rec_rawIn_normDist = mux(_floatMul_t_rec_rawIn_normDist_T_21, UInt<1>("h0"), _floatMul_t_rec_rawIn_normDist_T_41) @[Mux.scala 47:70]
    node _floatMul_t_rec_rawIn_subnormFract_T = dshl(floatMul_t_rec_rawIn_fractIn, floatMul_t_rec_rawIn_normDist) @[rawFloatFromFN.scala 52:33]
    node _floatMul_t_rec_rawIn_subnormFract_T_1 = bits(_floatMul_t_rec_rawIn_subnormFract_T, 20, 0) @[rawFloatFromFN.scala 52:46]
    node floatMul_t_rec_rawIn_subnormFract = shl(_floatMul_t_rec_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 52:64]
    node _floatMul_t_rec_rawIn_adjustedExp_T = xor(floatMul_t_rec_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 55:18]
    node _floatMul_t_rec_rawIn_adjustedExp_T_1 = mux(floatMul_t_rec_rawIn_isZeroExpIn, _floatMul_t_rec_rawIn_adjustedExp_T, floatMul_t_rec_rawIn_expIn) @[rawFloatFromFN.scala 54:10]
    node _floatMul_t_rec_rawIn_adjustedExp_T_2 = mux(floatMul_t_rec_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 58:14]
    node _floatMul_t_rec_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _floatMul_t_rec_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 58:9]
    node _floatMul_t_rec_rawIn_adjustedExp_T_4 = add(_floatMul_t_rec_rawIn_adjustedExp_T_1, _floatMul_t_rec_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 57:9]
    node floatMul_t_rec_rawIn_adjustedExp = tail(_floatMul_t_rec_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 57:9]
    node floatMul_t_rec_rawIn_isZero = and(floatMul_t_rec_rawIn_isZeroExpIn, floatMul_t_rec_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 60:30]
    node _floatMul_t_rec_rawIn_isSpecial_T = bits(floatMul_t_rec_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 61:32]
    node floatMul_t_rec_rawIn_isSpecial = eq(_floatMul_t_rec_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 61:57]
    wire floatMul_t_rec_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>} @[rawFloatFromFN.scala 63:19]
    node _floatMul_t_rec_rawIn_out_isNaN_T = eq(floatMul_t_rec_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 64:31]
    node _floatMul_t_rec_rawIn_out_isNaN_T_1 = and(floatMul_t_rec_rawIn_isSpecial, _floatMul_t_rec_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 64:28]
    floatMul_t_rec_rawIn.isNaN <= _floatMul_t_rec_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 64:15]
    node _floatMul_t_rec_rawIn_out_isInf_T = and(floatMul_t_rec_rawIn_isSpecial, floatMul_t_rec_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 65:28]
    floatMul_t_rec_rawIn.isInf <= _floatMul_t_rec_rawIn_out_isInf_T @[rawFloatFromFN.scala 65:15]
    floatMul_t_rec_rawIn.isZero <= floatMul_t_rec_rawIn_isZero @[rawFloatFromFN.scala 66:16]
    floatMul_t_rec_rawIn.sign <= floatMul_t_rec_rawIn_sign @[rawFloatFromFN.scala 67:14]
    node _floatMul_t_rec_rawIn_out_sExp_T = bits(floatMul_t_rec_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 68:28]
    node _floatMul_t_rec_rawIn_out_sExp_T_1 = cvt(_floatMul_t_rec_rawIn_out_sExp_T) @[rawFloatFromFN.scala 68:42]
    floatMul_t_rec_rawIn.sExp <= _floatMul_t_rec_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 68:14]
    node _floatMul_t_rec_rawIn_out_sig_T = eq(floatMul_t_rec_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 70:19]
    node _floatMul_t_rec_rawIn_out_sig_T_1 = cat(UInt<1>("h0"), _floatMul_t_rec_rawIn_out_sig_T) @[rawFloatFromFN.scala 70:16]
    node _floatMul_t_rec_rawIn_out_sig_T_2 = mux(floatMul_t_rec_rawIn_isZeroExpIn, floatMul_t_rec_rawIn_subnormFract, floatMul_t_rec_rawIn_fractIn) @[rawFloatFromFN.scala 70:33]
    node _floatMul_t_rec_rawIn_out_sig_T_3 = cat(_floatMul_t_rec_rawIn_out_sig_T_1, _floatMul_t_rec_rawIn_out_sig_T_2) @[rawFloatFromFN.scala 70:27]
    floatMul_t_rec_rawIn.sig <= _floatMul_t_rec_rawIn_out_sig_T_3 @[rawFloatFromFN.scala 69:13]
    node _floatMul_t_rec_T = bits(floatMul_t_rec_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:50]
    node _floatMul_t_rec_T_1 = mux(floatMul_t_rec_rawIn.isZero, UInt<3>("h0"), _floatMul_t_rec_T) @[recFNFromFN.scala 48:15]
    node _floatMul_t_rec_T_2 = mux(floatMul_t_rec_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _floatMul_t_rec_T_3 = or(_floatMul_t_rec_T_1, _floatMul_t_rec_T_2) @[recFNFromFN.scala 48:76]
    node _floatMul_t_rec_T_4 = cat(floatMul_t_rec_rawIn.sign, _floatMul_t_rec_T_3) @[recFNFromFN.scala 47:20]
    node _floatMul_t_rec_T_5 = bits(floatMul_t_rec_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node _floatMul_t_rec_T_6 = cat(_floatMul_t_rec_T_4, _floatMul_t_rec_T_5) @[recFNFromFN.scala 49:45]
    node _floatMul_t_rec_T_7 = bits(floatMul_t_rec_rawIn.sig, 21, 0) @[recFNFromFN.scala 51:22]
    node floatMul_t_rec = cat(_floatMul_t_rec_T_6, _floatMul_t_rec_T_7) @[recFNFromFN.scala 50:41]
    node floatMul_self_rec_rawIn_sign = bits(io.a.bits, 30, 30) @[rawFloatFromFN.scala 44:18]
    node floatMul_self_rec_rawIn_expIn = bits(io.a.bits, 29, 22) @[rawFloatFromFN.scala 45:19]
    node floatMul_self_rec_rawIn_fractIn = bits(io.a.bits, 21, 0) @[rawFloatFromFN.scala 46:21]
    node floatMul_self_rec_rawIn_isZeroExpIn = eq(floatMul_self_rec_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 48:30]
    node floatMul_self_rec_rawIn_isZeroFractIn = eq(floatMul_self_rec_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 49:34]
    node _floatMul_self_rec_rawIn_normDist_T = bits(floatMul_self_rec_rawIn_fractIn, 0, 0) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_1 = bits(floatMul_self_rec_rawIn_fractIn, 1, 1) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_2 = bits(floatMul_self_rec_rawIn_fractIn, 2, 2) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_3 = bits(floatMul_self_rec_rawIn_fractIn, 3, 3) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_4 = bits(floatMul_self_rec_rawIn_fractIn, 4, 4) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_5 = bits(floatMul_self_rec_rawIn_fractIn, 5, 5) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_6 = bits(floatMul_self_rec_rawIn_fractIn, 6, 6) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_7 = bits(floatMul_self_rec_rawIn_fractIn, 7, 7) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_8 = bits(floatMul_self_rec_rawIn_fractIn, 8, 8) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_9 = bits(floatMul_self_rec_rawIn_fractIn, 9, 9) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_10 = bits(floatMul_self_rec_rawIn_fractIn, 10, 10) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_11 = bits(floatMul_self_rec_rawIn_fractIn, 11, 11) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_12 = bits(floatMul_self_rec_rawIn_fractIn, 12, 12) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_13 = bits(floatMul_self_rec_rawIn_fractIn, 13, 13) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_14 = bits(floatMul_self_rec_rawIn_fractIn, 14, 14) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_15 = bits(floatMul_self_rec_rawIn_fractIn, 15, 15) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_16 = bits(floatMul_self_rec_rawIn_fractIn, 16, 16) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_17 = bits(floatMul_self_rec_rawIn_fractIn, 17, 17) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_18 = bits(floatMul_self_rec_rawIn_fractIn, 18, 18) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_19 = bits(floatMul_self_rec_rawIn_fractIn, 19, 19) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_20 = bits(floatMul_self_rec_rawIn_fractIn, 20, 20) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_21 = bits(floatMul_self_rec_rawIn_fractIn, 21, 21) @[primitives.scala 91:52]
    node _floatMul_self_rec_rawIn_normDist_T_22 = mux(_floatMul_self_rec_rawIn_normDist_T_1, UInt<5>("h14"), UInt<5>("h15")) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_23 = mux(_floatMul_self_rec_rawIn_normDist_T_2, UInt<5>("h13"), _floatMul_self_rec_rawIn_normDist_T_22) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_24 = mux(_floatMul_self_rec_rawIn_normDist_T_3, UInt<5>("h12"), _floatMul_self_rec_rawIn_normDist_T_23) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_25 = mux(_floatMul_self_rec_rawIn_normDist_T_4, UInt<5>("h11"), _floatMul_self_rec_rawIn_normDist_T_24) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_26 = mux(_floatMul_self_rec_rawIn_normDist_T_5, UInt<5>("h10"), _floatMul_self_rec_rawIn_normDist_T_25) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_27 = mux(_floatMul_self_rec_rawIn_normDist_T_6, UInt<4>("hf"), _floatMul_self_rec_rawIn_normDist_T_26) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_28 = mux(_floatMul_self_rec_rawIn_normDist_T_7, UInt<4>("he"), _floatMul_self_rec_rawIn_normDist_T_27) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_29 = mux(_floatMul_self_rec_rawIn_normDist_T_8, UInt<4>("hd"), _floatMul_self_rec_rawIn_normDist_T_28) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_30 = mux(_floatMul_self_rec_rawIn_normDist_T_9, UInt<4>("hc"), _floatMul_self_rec_rawIn_normDist_T_29) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_31 = mux(_floatMul_self_rec_rawIn_normDist_T_10, UInt<4>("hb"), _floatMul_self_rec_rawIn_normDist_T_30) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_32 = mux(_floatMul_self_rec_rawIn_normDist_T_11, UInt<4>("ha"), _floatMul_self_rec_rawIn_normDist_T_31) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_33 = mux(_floatMul_self_rec_rawIn_normDist_T_12, UInt<4>("h9"), _floatMul_self_rec_rawIn_normDist_T_32) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_34 = mux(_floatMul_self_rec_rawIn_normDist_T_13, UInt<4>("h8"), _floatMul_self_rec_rawIn_normDist_T_33) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_35 = mux(_floatMul_self_rec_rawIn_normDist_T_14, UInt<3>("h7"), _floatMul_self_rec_rawIn_normDist_T_34) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_36 = mux(_floatMul_self_rec_rawIn_normDist_T_15, UInt<3>("h6"), _floatMul_self_rec_rawIn_normDist_T_35) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_37 = mux(_floatMul_self_rec_rawIn_normDist_T_16, UInt<3>("h5"), _floatMul_self_rec_rawIn_normDist_T_36) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_38 = mux(_floatMul_self_rec_rawIn_normDist_T_17, UInt<3>("h4"), _floatMul_self_rec_rawIn_normDist_T_37) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_39 = mux(_floatMul_self_rec_rawIn_normDist_T_18, UInt<2>("h3"), _floatMul_self_rec_rawIn_normDist_T_38) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_40 = mux(_floatMul_self_rec_rawIn_normDist_T_19, UInt<2>("h2"), _floatMul_self_rec_rawIn_normDist_T_39) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_normDist_T_41 = mux(_floatMul_self_rec_rawIn_normDist_T_20, UInt<1>("h1"), _floatMul_self_rec_rawIn_normDist_T_40) @[Mux.scala 47:70]
    node floatMul_self_rec_rawIn_normDist = mux(_floatMul_self_rec_rawIn_normDist_T_21, UInt<1>("h0"), _floatMul_self_rec_rawIn_normDist_T_41) @[Mux.scala 47:70]
    node _floatMul_self_rec_rawIn_subnormFract_T = dshl(floatMul_self_rec_rawIn_fractIn, floatMul_self_rec_rawIn_normDist) @[rawFloatFromFN.scala 52:33]
    node _floatMul_self_rec_rawIn_subnormFract_T_1 = bits(_floatMul_self_rec_rawIn_subnormFract_T, 20, 0) @[rawFloatFromFN.scala 52:46]
    node floatMul_self_rec_rawIn_subnormFract = shl(_floatMul_self_rec_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 52:64]
    node _floatMul_self_rec_rawIn_adjustedExp_T = xor(floatMul_self_rec_rawIn_normDist, UInt<9>("h1ff")) @[rawFloatFromFN.scala 55:18]
    node _floatMul_self_rec_rawIn_adjustedExp_T_1 = mux(floatMul_self_rec_rawIn_isZeroExpIn, _floatMul_self_rec_rawIn_adjustedExp_T, floatMul_self_rec_rawIn_expIn) @[rawFloatFromFN.scala 54:10]
    node _floatMul_self_rec_rawIn_adjustedExp_T_2 = mux(floatMul_self_rec_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 58:14]
    node _floatMul_self_rec_rawIn_adjustedExp_T_3 = or(UInt<8>("h80"), _floatMul_self_rec_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 58:9]
    node _floatMul_self_rec_rawIn_adjustedExp_T_4 = add(_floatMul_self_rec_rawIn_adjustedExp_T_1, _floatMul_self_rec_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 57:9]
    node floatMul_self_rec_rawIn_adjustedExp = tail(_floatMul_self_rec_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 57:9]
    node floatMul_self_rec_rawIn_isZero = and(floatMul_self_rec_rawIn_isZeroExpIn, floatMul_self_rec_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 60:30]
    node _floatMul_self_rec_rawIn_isSpecial_T = bits(floatMul_self_rec_rawIn_adjustedExp, 8, 7) @[rawFloatFromFN.scala 61:32]
    node floatMul_self_rec_rawIn_isSpecial = eq(_floatMul_self_rec_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 61:57]
    wire floatMul_self_rec_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>} @[rawFloatFromFN.scala 63:19]
    node _floatMul_self_rec_rawIn_out_isNaN_T = eq(floatMul_self_rec_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 64:31]
    node _floatMul_self_rec_rawIn_out_isNaN_T_1 = and(floatMul_self_rec_rawIn_isSpecial, _floatMul_self_rec_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 64:28]
    floatMul_self_rec_rawIn.isNaN <= _floatMul_self_rec_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 64:15]
    node _floatMul_self_rec_rawIn_out_isInf_T = and(floatMul_self_rec_rawIn_isSpecial, floatMul_self_rec_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 65:28]
    floatMul_self_rec_rawIn.isInf <= _floatMul_self_rec_rawIn_out_isInf_T @[rawFloatFromFN.scala 65:15]
    floatMul_self_rec_rawIn.isZero <= floatMul_self_rec_rawIn_isZero @[rawFloatFromFN.scala 66:16]
    floatMul_self_rec_rawIn.sign <= floatMul_self_rec_rawIn_sign @[rawFloatFromFN.scala 67:14]
    node _floatMul_self_rec_rawIn_out_sExp_T = bits(floatMul_self_rec_rawIn_adjustedExp, 8, 0) @[rawFloatFromFN.scala 68:28]
    node _floatMul_self_rec_rawIn_out_sExp_T_1 = cvt(_floatMul_self_rec_rawIn_out_sExp_T) @[rawFloatFromFN.scala 68:42]
    floatMul_self_rec_rawIn.sExp <= _floatMul_self_rec_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 68:14]
    node _floatMul_self_rec_rawIn_out_sig_T = eq(floatMul_self_rec_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 70:19]
    node _floatMul_self_rec_rawIn_out_sig_T_1 = cat(UInt<1>("h0"), _floatMul_self_rec_rawIn_out_sig_T) @[rawFloatFromFN.scala 70:16]
    node _floatMul_self_rec_rawIn_out_sig_T_2 = mux(floatMul_self_rec_rawIn_isZeroExpIn, floatMul_self_rec_rawIn_subnormFract, floatMul_self_rec_rawIn_fractIn) @[rawFloatFromFN.scala 70:33]
    node _floatMul_self_rec_rawIn_out_sig_T_3 = cat(_floatMul_self_rec_rawIn_out_sig_T_1, _floatMul_self_rec_rawIn_out_sig_T_2) @[rawFloatFromFN.scala 70:27]
    floatMul_self_rec_rawIn.sig <= _floatMul_self_rec_rawIn_out_sig_T_3 @[rawFloatFromFN.scala 69:13]
    node _floatMul_self_rec_T = bits(floatMul_self_rec_rawIn.sExp, 8, 6) @[recFNFromFN.scala 48:50]
    node _floatMul_self_rec_T_1 = mux(floatMul_self_rec_rawIn.isZero, UInt<3>("h0"), _floatMul_self_rec_T) @[recFNFromFN.scala 48:15]
    node _floatMul_self_rec_T_2 = mux(floatMul_self_rec_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _floatMul_self_rec_T_3 = or(_floatMul_self_rec_T_1, _floatMul_self_rec_T_2) @[recFNFromFN.scala 48:76]
    node _floatMul_self_rec_T_4 = cat(floatMul_self_rec_rawIn.sign, _floatMul_self_rec_T_3) @[recFNFromFN.scala 47:20]
    node _floatMul_self_rec_T_5 = bits(floatMul_self_rec_rawIn.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node _floatMul_self_rec_T_6 = cat(_floatMul_self_rec_T_4, _floatMul_self_rec_T_5) @[recFNFromFN.scala 49:45]
    node _floatMul_self_rec_T_7 = bits(floatMul_self_rec_rawIn.sig, 21, 0) @[recFNFromFN.scala 51:22]
    node floatMul_self_rec = cat(_floatMul_self_rec_T_6, _floatMul_self_rec_T_7) @[recFNFromFN.scala 50:41]
    inst floatMul_t_resizer of RecFNToRecFN @[Arithmetic.scala 337:32]
    floatMul_t_resizer.io.in <= floatMul_t_rec @[Arithmetic.scala 338:25]
    floatMul_t_resizer.io.roundingMode <= UInt<3>("h0") @[Arithmetic.scala 339:35]
    floatMul_t_resizer.io.detectTininess <= UInt<1>("h1") @[Arithmetic.scala 340:37]
    inst floatMul_muladder of MulRecFN @[Arithmetic.scala 343:30]
    floatMul_muladder.io.roundingMode <= UInt<3>("h0") @[Arithmetic.scala 345:34]
    floatMul_muladder.io.detectTininess <= UInt<1>("h1") @[Arithmetic.scala 346:36]
    floatMul_muladder.io.a <= floatMul_self_rec @[Arithmetic.scala 348:23]
    floatMul_muladder.io.b <= floatMul_t_resizer.io.out @[Arithmetic.scala 349:23]
    wire floatMul : { bits : UInt<31>} @[Arithmetic.scala 351:23]
    node floatMul_out_bits_rawIn_exp = bits(floatMul_muladder.io.out, 30, 22) @[rawFloatFromRecFN.scala 51:21]
    node _floatMul_out_bits_rawIn_isZero_T = bits(floatMul_out_bits_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 52:28]
    node floatMul_out_bits_rawIn_isZero = eq(_floatMul_out_bits_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 52:53]
    node _floatMul_out_bits_rawIn_isSpecial_T = bits(floatMul_out_bits_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 53:28]
    node floatMul_out_bits_rawIn_isSpecial = eq(_floatMul_out_bits_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 53:53]
    wire floatMul_out_bits_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<24>} @[rawFloatFromRecFN.scala 55:23]
    node _floatMul_out_bits_rawIn_out_isNaN_T = bits(floatMul_out_bits_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _floatMul_out_bits_rawIn_out_isNaN_T_1 = and(floatMul_out_bits_rawIn_isSpecial, _floatMul_out_bits_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 56:33]
    floatMul_out_bits_rawIn.isNaN <= _floatMul_out_bits_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 56:20]
    node _floatMul_out_bits_rawIn_out_isInf_T = bits(floatMul_out_bits_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 57:41]
    node _floatMul_out_bits_rawIn_out_isInf_T_1 = eq(_floatMul_out_bits_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 57:36]
    node _floatMul_out_bits_rawIn_out_isInf_T_2 = and(floatMul_out_bits_rawIn_isSpecial, _floatMul_out_bits_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 57:33]
    floatMul_out_bits_rawIn.isInf <= _floatMul_out_bits_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 57:20]
    floatMul_out_bits_rawIn.isZero <= floatMul_out_bits_rawIn_isZero @[rawFloatFromRecFN.scala 58:20]
    node _floatMul_out_bits_rawIn_out_sign_T = bits(floatMul_muladder.io.out, 31, 31) @[rawFloatFromRecFN.scala 59:25]
    floatMul_out_bits_rawIn.sign <= _floatMul_out_bits_rawIn_out_sign_T @[rawFloatFromRecFN.scala 59:20]
    node _floatMul_out_bits_rawIn_out_sExp_T = cvt(floatMul_out_bits_rawIn_exp) @[rawFloatFromRecFN.scala 60:27]
    floatMul_out_bits_rawIn.sExp <= _floatMul_out_bits_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 60:20]
    node _floatMul_out_bits_rawIn_out_sig_T = eq(floatMul_out_bits_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 61:35]
    node _floatMul_out_bits_rawIn_out_sig_T_1 = cat(UInt<1>("h0"), _floatMul_out_bits_rawIn_out_sig_T) @[rawFloatFromRecFN.scala 61:32]
    node _floatMul_out_bits_rawIn_out_sig_T_2 = bits(floatMul_muladder.io.out, 21, 0) @[rawFloatFromRecFN.scala 61:49]
    node _floatMul_out_bits_rawIn_out_sig_T_3 = cat(_floatMul_out_bits_rawIn_out_sig_T_1, _floatMul_out_bits_rawIn_out_sig_T_2) @[rawFloatFromRecFN.scala 61:44]
    floatMul_out_bits_rawIn.sig <= _floatMul_out_bits_rawIn_out_sig_T_3 @[rawFloatFromRecFN.scala 61:20]
    node floatMul_out_bits_isSubnormal = lt(floatMul_out_bits_rawIn.sExp, asSInt(UInt<9>("h82"))) @[fNFromRecFN.scala 51:38]
    node _floatMul_out_bits_denormShiftDist_T = bits(floatMul_out_bits_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 52:47]
    node _floatMul_out_bits_denormShiftDist_T_1 = sub(UInt<1>("h1"), _floatMul_out_bits_denormShiftDist_T) @[fNFromRecFN.scala 52:35]
    node floatMul_out_bits_denormShiftDist = tail(_floatMul_out_bits_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 52:35]
    node _floatMul_out_bits_denormFract_T = shr(floatMul_out_bits_rawIn.sig, 1) @[fNFromRecFN.scala 53:38]
    node _floatMul_out_bits_denormFract_T_1 = dshr(_floatMul_out_bits_denormFract_T, floatMul_out_bits_denormShiftDist) @[fNFromRecFN.scala 53:42]
    node floatMul_out_bits_denormFract = bits(_floatMul_out_bits_denormFract_T_1, 21, 0) @[fNFromRecFN.scala 53:60]
    node _floatMul_out_bits_expOut_T = bits(floatMul_out_bits_rawIn.sExp, 7, 0) @[fNFromRecFN.scala 58:27]
    node _floatMul_out_bits_expOut_T_1 = sub(_floatMul_out_bits_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 58:45]
    node _floatMul_out_bits_expOut_T_2 = tail(_floatMul_out_bits_expOut_T_1, 1) @[fNFromRecFN.scala 58:45]
    node _floatMul_out_bits_expOut_T_3 = mux(floatMul_out_bits_isSubnormal, UInt<1>("h0"), _floatMul_out_bits_expOut_T_2) @[fNFromRecFN.scala 56:16]
    node _floatMul_out_bits_expOut_T_4 = or(floatMul_out_bits_rawIn.isNaN, floatMul_out_bits_rawIn.isInf) @[fNFromRecFN.scala 60:44]
    node _floatMul_out_bits_expOut_T_5 = bits(_floatMul_out_bits_expOut_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _floatMul_out_bits_expOut_T_6 = mux(_floatMul_out_bits_expOut_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 77:12]
    node floatMul_out_bits_expOut = or(_floatMul_out_bits_expOut_T_3, _floatMul_out_bits_expOut_T_6) @[fNFromRecFN.scala 60:15]
    node _floatMul_out_bits_fractOut_T = bits(floatMul_out_bits_rawIn.sig, 21, 0) @[fNFromRecFN.scala 64:48]
    node _floatMul_out_bits_fractOut_T_1 = mux(floatMul_out_bits_rawIn.isInf, UInt<1>("h0"), _floatMul_out_bits_fractOut_T) @[fNFromRecFN.scala 64:20]
    node floatMul_out_bits_fractOut = mux(floatMul_out_bits_isSubnormal, floatMul_out_bits_denormFract, _floatMul_out_bits_fractOut_T_1) @[fNFromRecFN.scala 62:16]
    node floatMul_out_bits_hi = cat(floatMul_out_bits_rawIn.sign, floatMul_out_bits_expOut) @[Cat.scala 33:92]
    node _floatMul_out_bits_T = cat(floatMul_out_bits_hi, floatMul_out_bits_fractOut) @[Cat.scala 33:92]
    floatMul.bits <= _floatMul_out_bits_T @[Arithmetic.scala 352:18]
    io.out <= floatMul @[Arithmetic.scala 550:10]

